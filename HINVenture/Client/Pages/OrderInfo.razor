@page "/OrderInfo"
@inject HttpClient _httpClient
@inject NavigationManager _navigationManager
@inject ApiAuthenticationStateProvider _stateProvider

<h3>Working with orders</h3>


@if (isAccessDenied == false)
{
    <p>Access denied</p>
}
else
{
    <div class="row">
        <div class="col-md-9">
            <form class="form form-horizontal">
                <div class="form-group">
                    <label class="col-md-2 control-label">Title</label>
                    <div class="col-md-7">
                        <input type="text" bind=@order.Title class="form-control" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-2 control-label">ISBN:</label>
                    <div class="col-md-7">
                        <input type="text" bind=@order.Description class="form-control" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-2 control-label"></label>
                    <div class="col-md-7">
                        <button class="btn btn-primary" >Save</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

}

@code {
    string id = "0";
    Order order = new Order();

    List<Order> orders = null;
    string Message { get; set; }

    AuthenticationState state;
    bool isAccessDenied = false;

    protected override async Task OnInitializedAsync()
    {
        state = await _stateProvider.GetAuthenticationStateAsync();
        if (state.User.IsInRole("freelancer"))
        {
            isAccessDenied = true;
           //  order = await _httpClient.GetFromJsonAsync<Order>($"api/OrderApi/GetOrdersByid/{id}");

        }

    }

}
