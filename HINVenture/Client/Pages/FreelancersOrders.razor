@page "/freelancersorders"
@using Microsoft.AspNetCore.Authorization
@inject HttpClient _httpClient
@inject ApiAuthenticationStateProvider _StateProvider


@if (isAccessDenied == false)
{
    <p>Access denied</p>
}
else
{
    <h1>Freelancers orders</h1>

    @if (orders == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="m-2">
            <table class="table table-sm table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Description</th>
                        <th>Posted Date</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in orders)
                    {
                        <tr>
                            <th>@order.Title</th>
                            <th>@order.Description</th>
                            <th>@order.PostedDate</th>
                            <td>
                                <a href="@GetEditUrl(order.Id)" class="btn btn-primary m-1">Edit</a>
                                <a href="" class="btn btn-danger m-1">Cancel</a>

                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
}

@code {

    bool isAccessDenied = false;
    private List<Order> orders;

    protected override async Task OnInitializedAsync()
    {
        var state = await _StateProvider.GetAuthenticationStateAsync();

        if (state.User.IsInRole("freelancer"))
        {
            isAccessDenied = true;
            orders = await _httpClient.GetFromJsonAsync<List<Order>>($"api/OrderApi/GetOrdersByFreelancer/{state.User.Identity.Name}");
        }
    }
    public string GetEditUrl(int id) => $"/OrderInfo/{id}";

}